#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "Detective\ Pink\ Panther"\ application.\ \r\n\ \ "Detective\ Pink\ Panther"\ is\ a\ very\ simple,\ text\ based\ adventure\ and\ investigation\ game.\r\n\ \ Users\ can\ walk\ around\ some\ scenery,\ interact\ with\ objects\ and\ try\ to\ solve\ puzzles.\r\n\ \ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Guilherme\ Matos\ and\ Igor\ Lucas\r\n\ @version\ 2008.03.30\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n
comment10.params=command
comment10.target=void\ examine(Command)
comment10.text=\r\n\ Prints\ a\ item\ long,\ detailed\ description\r\n\ @param\ command\ Is\ the\ command\ given\ to\ the\ action,\ taking\ it's\ second\ word\ as\ a\ parameter\r\n
comment11.params=command
comment11.target=void\ take(Command)
comment11.text=\r\n\ Takes\ a\ item\ from\ the\ ground\ and\ adds\ it\ to\ the\ player\ inventory\r\n\ @param\ command\ Is\ the\ command\ given\ to\ take\ said\ action,\ taking\ it's\ second\ word\ as\ a\ parameter.\r\n
comment12.params=command
comment12.target=void\ drop(Command)
comment12.text=\r\n\ Drops\ a\ item\ from\ the\ player\ inventory\ to\ the\ ground.\r\n\ @param\ command\ Is\ the\ command\ given\ to\ take\ said\ action,\ using\ it's\ second\ word\ to\ determine\ which\ item\ to\ drop.\r\n
comment13.params=
comment13.target=void\ inventory()
comment13.text=\r\n\ Prints\ a\ list\ of\ all\ the\ items\ in\ the\ player\ inventory.\r\n
comment14.params=command
comment14.target=boolean\ quit(Command)
comment14.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment15.params=
comment15.target=void\ endgame()
comment15.text=\r\n\ Prints\ the\ endgame\ message\ if\ the\ player\ reached\ the\ final\ room.\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\ Additionaly,\ set's\ the\ player\ initial\ room\ and\ creates\ the\ items\ linked\ to\ the\r\n\ rooms.\r\n
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment4.params=
comment4.target=void\ printWelcome()
comment4.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment5.params=command
comment5.target=boolean\ processCommand(Command)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment6.params=
comment6.target=void\ look()
comment6.text=\r\n\ Prints\ the\ description\ of\ the\ room\ and\ visible\ items\ to\ the\ player.\r\n
comment7.params=
comment7.target=void\ searchRoom()
comment7.text=\r\n\ Searches\ the\ room,\ removing\ any\ hidden\ attributes\ from\ occult\ items\ in\ said\ room.\r\n
comment8.params=
comment8.target=void\ printHelp()
comment8.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment9.params=command
comment9.target=void\ goRoom(Command)
comment9.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ @param\ command\ The\ command\ given\ to\ take\ this\ action,\ using\ it's\ second\ word\ as\ a\ parameter.\r\n
numComments=16
